name: pinterest-clone

services:
  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
      args:
        BUILD_APP: pinterest-clone-backend
    ports:
      - "5000:5000"
      - "5555:5555"
    env_file:
      - ./apps/backend/.env
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:5000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
      args:
        BUILD_APP: pinterest-clone-frontend
        VITE_BACKEND_API_URL: "http://localhost:5000/api/v1"
    ports:
      - "8080:80"
    networks:
      - app-network
    depends_on:
      backend:
        condition: service_healthy
    env_file:
      - ./apps/frontend/.env

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: pinterest-clone
    restart: always
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  pg-data:
